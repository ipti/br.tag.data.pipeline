{
	"name": "Pipeline-TAG-AccumulatedData-Load",
	"properties": {
		"activities": [
			{
				"name": "CopyDataGloria",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LastInsertDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "\nSELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Nossa Senhora Da Glória' AS `city_name`,\n    'nossasenhoradagloria.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `nossasenhoradagloria.tag.ong.br`.student_identification s\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN log l2 ON s.id = l2.reference_ids\nLEFT JOIN student_vaccine svc ON s.id = svc.student_id\nleft JOIN vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_gloria",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "GetLastInsertDate",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select max(LogDate) from [data-warehouse-tag].dbo.Accumulated_Data;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LastInsertDate",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetLastInsertDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "LastInsertGloria",
					"value": {
						"value": "@formatDateTime(activity('GetLastInsertDate').output.firstRow[''], 'yyyy-MM-dd HH:mm:ss.fff')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "CopyDataAxixa",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataGloria",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Axixa' AS `city_name`,\n    'axixa.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `axixa.tag.ong.br`.student_identification s\nLEFT JOIN `axixa.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `axixa.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `axixa.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `axixa.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `axixa.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `axixa.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `axixa.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `axixa.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `axixa.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `axixa.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `axixa.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN log l2 ON s.id = l2.reference_ids\nLEFT JOIN student_vaccine svc ON s.id = svc.student_id\nleft JOIN vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_axixa",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataBuzios",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LastInsertDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Búzios' AS `city_name`,\n    'buzios.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `buzios.tag.ong.br`.student_identification s\nLEFT JOIN `buzios.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `buzios.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `buzios.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `buzios.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `buzios.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `buzios.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `buzios.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `buzios.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `buzios.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `buzios.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `buzios.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `buzios.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `buzios.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `buzios.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_buzios",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataCampoDoBrito",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataBuzios",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Campo Do Brito' AS `city_name`,\n    'campodobrito.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `campodobrito.tag.ong.br`.student_identification s\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `campodobrito.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `campodobrito.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `campodobrito.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `campodobrito.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `campodobrito.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `campodobrito.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `campodobrito.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `campodobrito.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_campoDoBrito",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataCarmopolis",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataAxixa",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Carmópolis' AS `city_name`,\n    'carmopolis.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `carmopolis.tag.ong.br`.student_identification s\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `carmopolis.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `carmopolis.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `carmopolis.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `carmopolis.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `carmopolis.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `carmopolis.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `carmopolis.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `carmopolis.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_carmopolis",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataCristalia",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataCampoDoBrito",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Cristália' AS `city_name`,\n    'cristalia.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `cristalia.tag.ong.br`.student_identification s\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `cristalia.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `cristalia.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `cristalia.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `cristalia.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `cristalia.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `cristalia.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `cristalia.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `cristalia.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_cristalia",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataBoquim",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LastInsertDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Boquim' AS `city_name`,\n    'boquim.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `boquim.tag.ong.br`.student_identification s\nLEFT JOIN `boquim.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `boquim.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `boquim.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `boquim.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `boquim.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `boquim.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `boquim.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `boquim.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `boquim.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `boquim.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `boquim.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `boquim.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `boquim.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `boquim.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_boquim",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataFeiraNova",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataCarmopolis",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Feira Nova' AS `city_name`,\n    'feiranova.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `feiranova.tag.ong.br`.student_identification s\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `feiranova.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `feiranova.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `feiranova.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `feiranova.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `feiranova.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `feiranova.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `feiranova.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `feiranova.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; ",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_feiraNova",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataGeneralMaynard",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataBoquim",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'General Maynard' AS `city_name`,\n    'generalmaynard.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `generalmaynard.tag.ong.br`.student_identification s\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `generalmaynard.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `generalmaynard.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `generalmaynard.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `generalmaynard.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `generalmaynard.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `generalmaynard.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `generalmaynard.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `generalmaynard.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; ",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_generalMaynard",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataGracchoCardoso",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataGeneralMaynard",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Graccho Cardoso' AS `city_name`,\n    'gracchocardoso.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `gracchocardoso.tag.ong.br`.student_identification s\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `gracchocardoso.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `gracchocardoso.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `gracchocardoso.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `gracchocardoso.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `gracchocardoso.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; ",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_gracchoCardoso",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataHumbertoCampos",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LastInsertDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Humberto de Campos' AS `city_name`,\n    'humbertodecampos.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `humbertodecampos.tag.ong.br`.student_identification s\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `humbertodecampos.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `humbertodecampos.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `humbertodecampos.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `humbertodecampos.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `humbertodecampos.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; ",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_humbertoCampos",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataIcatu",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataHumbertoCampos",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Icatu ' AS `city_name`,\n    'icatu.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `icatu.tag.ong.br`.student_identification s\nLEFT JOIN `icatu.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `icatu.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `icatu.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `icatu.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `icatu.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `icatu.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `icatu.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `icatu.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `icatu.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `icatu.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `icatu.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `icatu.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `icatu.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `icatu.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; ",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_icatu",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataItabi",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataIcatu",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Itabi' AS `city_name`,\n    'itabi.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `itabi.tag.ong.br`.student_identification s\nLEFT JOIN `itabi.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `itabi.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `itabi.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `itabi.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `itabi.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `itabi.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `itabi.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `itabi.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `itabi.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `itabi.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `itabi.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `itabi.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `itabi.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `itabi.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_itabi",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataItapemirim",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataItabi",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Itapemirim' AS `city_name`,\n    'itapemirim.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `itapemirim.tag.ong.br`.student_identification s\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `itapemirim.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `itapemirim.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `itapemirim.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `itapemirim.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `itapemirim.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `itapemirim.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `itapemirim.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `itapemirim.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; \n",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_itapemirim",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataJaparatuba",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataCristalia",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Japaratuba' AS `city_name`,\n    'japaratuba.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `japaratuba.tag.ong.br`.student_identification s\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `japaratuba.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `japaratuba.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `japaratuba.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `japaratuba.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `japaratuba.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `japaratuba.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `japaratuba.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `japaratuba.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; \n",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_japaratuba",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataJapoata",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataGracchoCardoso",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Japoatã' AS `city_name`,\n    'japoata.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `japoata.tag.ong.br`.student_identification s\nLEFT JOIN `japoata.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `japoata.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `japoata.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `japoata.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `japoata.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `japoata.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `japoata.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `japoata.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `japoata.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `japoata.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `japoata.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `japoata.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `japoata.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `japoata.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_japoata",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataPirambu",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataItapemirim",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Pirambu' AS `city_name`,\n    'pirambu.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `pirambu.tag.ong.br`.student_identification s\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `pirambu.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `pirambu.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `pirambu.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `pirambu.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `pirambu.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `pirambu.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `pirambu.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `pirambu.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_pirambu",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataMalhadaDosBois",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataJaparatuba",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Malhada Dos Bois' AS `city_name`,\n    'malhada.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `malhada.tag.ong.br`.student_identification s\nLEFT JOIN `malhada.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `malhada.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `malhada.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `malhada.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `malhada.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `malhada.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `malhada.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `malhada.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `malhada.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `malhada.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `malhada.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `malhada.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `malhada.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `malhada.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_malhadaDosBois",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataPocoDantas",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataFeiraNova",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Poço Dantas' AS `city_name`,\n    'pocodantas.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `pocodantas.tag.ong.br`.student_identification s\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `pocodantas.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `pocodantas.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `pocodantas.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `pocodantas.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `pocodantas.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `pocodantas.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `pocodantas.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `pocodantas.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_pocoDantas",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataPropria",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LastInsertDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Propriá' AS `city_name`,\n    'propria.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `propria.tag.ong.br`.student_identification s\nLEFT JOIN `propria.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `propria.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `propria.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `propria.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `propria.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `propria.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `propria.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `propria.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `propria.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `propria.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `propria.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `propria.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `propria.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `propria.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_propria",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataRubelita",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataPropria",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Rubelita' AS `city_name`,\n    'rubelita.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `rubelita.tag.ong.br`.student_identification s\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `rubelita.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `rubelita.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `rubelita.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `rubelita.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `rubelita.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN  `rubelita.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN  `rubelita.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN  `rubelita.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_rubelita",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataSantaLuzia",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataSantanaDoSaoFrancisco",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Santa Luzia do Itanhy' AS `city_name`,\n    'santaluzia.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `santaluzia.tag.ong.br`.student_identification s\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `santaluzia.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `santaluzia.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `santaluzia.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `santaluzia.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `santaluzia.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN  `santaluzia.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN  `santaluzia.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN  `santaluzia.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_santaLuziaDoIntahy",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataSantanaDoSaoFrancisco",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataSantaRosaDeLima",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Santana Do São Francisco' AS `city_name`,\n    'santanadosaofrancisco.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `santanadosaofrancisco.tag.ong.br`.student_identification s\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `santanadosaofrancisco.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `santanadosaofrancisco.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `santanadosaofrancisco.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_santanaDoSaoFrancisco",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataSantaRosaDeLima",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataSaoJoaoDaBarra",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Santa Rosa De Lima' AS `city_name`,\n    'santarosadelima.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `santarosadelima.tag.ong.br`.student_identification s\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `santarosadelima.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `santarosadelima.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `santarosadelima.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `santarosadelima.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `santarosadelima.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN  `santarosadelima.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN  `santarosadelima.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN  `santarosadelima.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_santaRosaDeLima",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataSaoJoaoDaBarra",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataRubelita",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'São João Da Barra' AS `city_name`,\n    'saojoaodabarra.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `saojoaodabarra.tag.ong.br`.student_identification s\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `saojoaodabarra.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN  `saojoaodabarra.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN  `saojoaodabarra.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN  `saojoaodabarra.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_saoJoaoDaBarra",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataUirauna",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataSantaLuzia",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Uiraúna' AS `city_name`,\n    'uirauna.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `uirauna.tag.ong.br`.student_identification s\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `uirauna.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `uirauna.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `uirauna.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `uirauna.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `uirauna.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN  `uirauna.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN  `uirauna.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN  `uirauna.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_uirauna",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataUmari",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataJapoata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Umari' AS `city_name`,\n    'umari.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `umari.tag.ong.br`.student_identification s\nLEFT JOIN `umari.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `umari.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `umari.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `umari.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `umari.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `umari.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `umari.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `umari.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `umari.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `umari.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `umari.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `umari.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `umari.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `umari.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_umari",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataLaranjeiras",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataPocoDantas",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Laranjeiras' AS `city_name`,\n    'laranjeiras.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `laranjeiras.tag.ong.br`.student_identification s\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `laranjeiras.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `laranjeiras.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `laranjeiras.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `laranjeiras.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `laranjeiras.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `laranjeiras.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `laranjeiras.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `laranjeiras.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_cluster",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataDivinaPastora",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataMalhadaDosBois",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Divina Pastora' AS `city_name`,\n    'divinapastora.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `divinapastora.tag.ong.br`.student_identification s\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `divinapastora.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `divinapastora.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `divinapastora.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `divinapastora.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `divinapastora.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `divinapastora.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `divinapastora.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `divinapastora.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_cluster",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataCaicaraDoNorte",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataUmari",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Caiçara Do Norte' AS `city_name`,\n    'caicaradonorte.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `caicaradonorte.tag.ong.br`.student_identification s\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `caicaradonorte.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `caicaradonorte.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `caicaradonorte.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `caicaradonorte.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `caicaradonorte.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;\n\n",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_cluster",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataRosarioDoCatete",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataPirambu",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Rosário Do Catete' AS `city_name`,\n    'rosariodocatete.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `rosariodocatete.tag.ong.br`.student_identification s\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `rosariodocatete.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `rosariodocatete.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `rosariodocatete.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `rosariodocatete.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `rosariodocatete.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_cluster",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataSiriri",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataLaranjeiras",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Siriri' AS `city_name`,\n    'siriri.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `siriri.tag.ong.br`.student_identification s\nLEFT JOIN `siriri.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `siriri.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `siriri.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `siriri.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `siriri.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `siriri.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `siriri.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `siriri.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `siriri.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `siriri.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `siriri.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `siriri.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `siriri.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `siriri.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;\n",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_cluster",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataMantenopolis",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataDivinaPastora",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Mantenópolis' AS `city_name`,\n    'mantenopolis.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `mantenopolis.tag.ong.br`.student_identification s\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `mantenopolis.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `mantenopolis.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `mantenopolis.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `mantenopolis.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `mantenopolis.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `mantenopolis.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `mantenopolis.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `mantenopolis.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_cluster",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataUbatuba",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataCaicaraDoNorte",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Ubatuba' AS `city_name`,\n    'ubatuba.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `ubatuba.tag.ong.br`.student_identification s\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `ubatuba.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `ubatuba.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `ubatuba.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `ubatuba.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `ubatuba.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `ubatuba.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `ubatuba.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `ubatuba.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_cluster",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataAltoDoRodrigues",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataRosarioDoCatete",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Alto Do Rodrigues' AS `city_name`,\n    'altodorodrigues.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `altodorodrigues.tag.ong.br`.student_identification s\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `altodorodrigues.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `altodorodrigues.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `altodorodrigues.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `altodorodrigues.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `altodorodrigues.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_cluster",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataTomeAcu",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataSiriri",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "\nSELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Tomé-Açu' AS `city_name`,\n    'tome-acu.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `tome-acu.tag.ong.br`.student_identification s\nLEFT JOIN `tome-acu.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `tome-acu.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `tome-acu.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `tome-acu.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `tome-acu.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `tome-acu.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `tome-acu.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `tome-acu.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `tome-acu.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `tome-acu.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `tome-acu.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `tome-acu.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `tome-acu.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `tome-acu.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;\n\n\n\n\n\n\n\n\n\n",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_cluster",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "CopyDataPalmeirandia",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataMantenopolis",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"additionalColumns": [
							{
								"name": "DataLineageIngestion",
								"value": {
									"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
									"type": "Expression"
								}
							}
						],
						"query": {
							"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Palmeirândia' AS `city_name`,\n    'palmeirandia.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `palmeirandia.tag.ong.br`.student_identification s\nLEFT JOIN `palmeirandia.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `palmeirandia.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `palmeirandia.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `palmeirandia.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `palmeirandia.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `palmeirandia.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `palmeirandia.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `palmeirandia.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `palmeirandia.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `palmeirandia.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `palmeirandia.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `palmeirandia.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `palmeirandia.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `palmeirandia.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Special-id"
								},
								"sink": {
									"name": "HASH",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "max_date"
								},
								"sink": {
									"name": "LogDate",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "db_name"
								},
								"sink": {
									"name": "Database_name",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "city_name"
								},
								"sink": {
									"name": "CityName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "ID",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Turmas"
								},
								"sink": {
									"name": "Class",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "name"
								},
								"sink": {
									"name": "StudentName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school name"
								},
								"sink": {
									"name": "SchoolName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bairro"
								},
								"sink": {
									"name": "StudentNeighborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "status"
								},
								"sink": {
									"name": "StudentStatus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Rua"
								},
								"sink": {
									"name": "StudentStreet",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_familia_char"
								},
								"sink": {
									"name": "StudentBolsaFamiliaChar",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Bolsa_Familia"
								},
								"sink": {
									"name": "StudentBolsaFamilia",
									"type": "bit"
								}
							},
							{
								"source": {
									"name": "stage"
								},
								"sink": {
									"name": "StudentStage",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "gender"
								},
								"sink": {
									"name": "StudentGender",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "color"
								},
								"sink": {
									"name": "StudentColor",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "class"
								},
								"sink": {
									"name": "StudentSerie",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "deficiency"
								},
								"sink": {
									"name": "StudentDeficiency",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birth_city"
								},
								"sink": {
									"name": "StudentBirthCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "birthday"
								},
								"sink": {
									"name": "StudentBirthday",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "adddress_city"
								},
								"sink": {
									"name": "StudentAddressCity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "cep"
								},
								"sink": {
									"name": "StudentCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Utiliza Onibus"
								},
								"sink": {
									"name": "StudentBus",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "mother"
								},
								"sink": {
									"name": "StudentMotherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "father"
								},
								"sink": {
									"name": "StudentFatherName",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_year"
								},
								"sink": {
									"name": "ClasssYear",
									"type": "int",
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Localidade"
								},
								"sink": {
									"name": "StudentLocality",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Doença_Celíaca"
								},
								"sink": {
									"name": "StudentHasCeliac",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Diabetes"
								},
								"sink": {
									"name": "StudentHasDiabetes",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Hipertensão"
								},
								"sink": {
									"name": "StudentHasHypertension",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Por_Deficiência_de_Ferro"
								},
								"sink": {
									"name": "StudentHasIronDeficiencyAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Anemia_Falciforme"
								},
								"sink": {
									"name": "StudentHasSickleCellAnemia",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Intolerância_à_Lactose"
								},
								"sink": {
									"name": "StudentHasLactoseIntolerance",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Desnutrição"
								},
								"sink": {
									"name": "StudentHasMalnutrition",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "Obesidade"
								},
								"sink": {
									"name": "StudentHasObesity",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "others"
								},
								"sink": {
									"name": "StudentDiferentHealthProblems",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "vaccine_name"
								},
								"sink": {
									"name": "StudentVaccine",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "latitude"
								},
								"sink": {
									"name": "SchoolLatitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "longitude"
								},
								"sink": {
									"name": "SchoolLongitude",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_address"
								},
								"sink": {
									"name": "SchoolAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_number"
								},
								"sink": {
									"name": "SchoolNumber",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_complement"
								},
								"sink": {
									"name": "SchoolComplementAddress",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_neighborhood"
								},
								"sink": {
									"name": "SchoolComplementNeigborhood",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "school_cep"
								},
								"sink": {
									"name": "SchoolCep",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "schoolId"
								},
								"sink": {
									"name": "SchoolId",
									"type": "varchar"
								}
							},
							{
								"source": {
									"name": "DataLineageIngestion"
								},
								"sink": {
									"name": "DataLineageIngestion",
									"type": "datetime",
									"scale": 3,
									"precision": 23
								}
							},
							{
								"source": {
									"name": "vaccine_id"
								},
								"sink": {
									"name": "Vaccine_id",
									"type": "int",
									"precision": 10
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DB_cluster",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Accumulated_data",
						"type": "DatasetReference"
					}
				]
			}
		],
		"variables": {
			"LastInsertGloria": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-06-25T00:36:37Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}