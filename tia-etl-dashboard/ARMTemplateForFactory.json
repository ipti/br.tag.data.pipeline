{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "tia-etl-dashboard"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'AzureSqlDatabase1'"
		},
		"Banco_cluster_TIA_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'Banco_cluster_TIA'"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'FileServer1'"
		},
		"MySqlAltoDoRodrigues_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlAltoDoRodrigues'"
		},
		"MySqlAxixa_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlAxixa'"
		},
		"MySqlBoquim_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlBoquim'"
		},
		"MySqlBuzios_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlBuzios'"
		},
		"MySqlCaicaraDoNorte_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlCaicaraDoNorte'"
		},
		"MySqlCampoDoBrito_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlCampoDoBrito'"
		},
		"MySqlCarmopolis_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlCarmopolis'"
		},
		"MySqlCristalia_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlCristalia'"
		},
		"MySqlFeiraNova_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlFeiraNova'"
		},
		"MySqlGeneralMaynard_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlGeneralMaynard'"
		},
		"MySqlGloria_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlGloria'"
		},
		"MySqlGrachoCardoso_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlGrachoCardoso'"
		},
		"MySqlHumbertoCampos_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlHumbertoCampos'"
		},
		"MySqlIcatu_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlIcatu'"
		},
		"MySqlItapemirim_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlItapemirim'"
		},
		"MySqlJaparatuba_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlJaparatuba'"
		},
		"MySqlJapoata_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlJapoata'"
		},
		"MySqlMalhadaDosBois_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlMalhadaDosBois'"
		},
		"MySqlPirambu_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlPirambu'"
		},
		"MySqlPocoDantas_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlPocoDantas'"
		},
		"MySqlPropria_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlPropria'"
		},
		"MySqlRubelita_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlRubelita'"
		},
		"MySqlSantaLuzia_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlSantaLuzia'"
		},
		"MySqlSantaRosaDeLima_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlSantaRosaDeLima'"
		},
		"MySqlSantanaDoSaoFrancisco_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlSantanaDoSaoFrancisco'"
		},
		"MySqlSaoJoaoDaBarra_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlSaoJoaoDaBarra'"
		},
		"MySqlUbatuba_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlUbatuba'"
		},
		"MySqlUirauna_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlUirauna'"
		},
		"MySqlUmari_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlUmari'"
		},
		"MySqlitabi_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'MySqlitabi'"
		},
		"Banco_cluster_TIA_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"Banco_cluster_TIA_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "cluster.data.tag.ong.br"
		},
		"Banco_cluster_TIA_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:/Users/Paulo/Downloads/arquivo_modificado.csv"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "root"
		},
		"MySqlAltoDoRodrigues_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlAltoDoRodrigues_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "altodorodrigues.tag.ong.br"
		},
		"MySqlAltoDoRodrigues_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlAxixa_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlAxixa_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "axixa.tag.ong.br"
		},
		"MySqlAxixa_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlBoquim_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlBoquim_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "boquim.tag.ong.br"
		},
		"MySqlBoquim_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlBuzios_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlBuzios_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "buzios.tag.ong.br"
		},
		"MySqlBuzios_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlCaicaraDoNorte_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlCaicaraDoNorte_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "caicaradonorte.tag.ong.br"
		},
		"MySqlCaicaraDoNorte_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlCampoDoBrito_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlCampoDoBrito_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "campodobrito.tag.ong.br"
		},
		"MySqlCampoDoBrito_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlCarmopolis_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlCarmopolis_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "carmopolis.tag.ong.br"
		},
		"MySqlCarmopolis_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlCristalia_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlCristalia_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "cristalia.tag.ong.br"
		},
		"MySqlCristalia_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlFeiraNova_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlFeiraNova_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "feiranova.tag.ong.br "
		},
		"MySqlFeiraNova_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlGeneralMaynard_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlGeneralMaynard_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "generalmaynard.tag.ong.br"
		},
		"MySqlGeneralMaynard_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlGloria_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlGloria_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "nossasenhoradagloria.tag.ong.br"
		},
		"MySqlGloria_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlGrachoCardoso_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlGrachoCardoso_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "gracchocardoso.tag.ong.br"
		},
		"MySqlGrachoCardoso_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlHumbertoCampos_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlHumbertoCampos_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "humbertodecampos.tag.ong.br"
		},
		"MySqlHumbertoCampos_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlIcatu_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlIcatu_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "icatu.tag.ong.br"
		},
		"MySqlIcatu_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlItapemirim_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlItapemirim_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "itapemirim.tag.ong.br"
		},
		"MySqlItapemirim_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlJaparatuba_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlJaparatuba_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "japaratuba.tag.ong.br"
		},
		"MySqlJaparatuba_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlJapoata_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlJapoata_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "japoata.tag.ong.br"
		},
		"MySqlJapoata_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlMalhadaDosBois_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlMalhadaDosBois_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "malhada.tag.ong.br"
		},
		"MySqlMalhadaDosBois_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlPirambu_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlPirambu_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "pirambu.tag.ong.br"
		},
		"MySqlPirambu_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlPocoDantas_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlPocoDantas_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "pocodantas.tag.ong.br"
		},
		"MySqlPocoDantas_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlPropria_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlPropria_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "propria.tag.ong.br"
		},
		"MySqlPropria_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlRubelita_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlRubelita_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "rubelita.tag.ong.br"
		},
		"MySqlRubelita_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlSantaLuzia_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlSantaLuzia_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "santaluzia.tag.ong.br"
		},
		"MySqlSantaLuzia_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlSantaRosaDeLima_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlSantaRosaDeLima_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "santarosadelima.tag.ong.br"
		},
		"MySqlSantaRosaDeLima_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlSantanaDoSaoFrancisco_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlSantanaDoSaoFrancisco_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "santanadosaofrancisco.tag.ong.br"
		},
		"MySqlSantanaDoSaoFrancisco_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlSaoJoaoDaBarra_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlSaoJoaoDaBarra_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "saojoaodabarra.tag.ong.br"
		},
		"MySqlSaoJoaoDaBarra_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlUbatuba_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlUbatuba_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ubatuba.tag.ong.br"
		},
		"MySqlUbatuba_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlUirauna_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlUirauna_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "uirauna.tag.ong.br"
		},
		"MySqlUirauna_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlUmari_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlUmari_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "umari.tag.ong.br"
		},
		"MySqlUmari_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		},
		"MySqlitabi_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "br-ong-tag.mysql.database.azure.com"
		},
		"MySqlitabi_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "itabi.tag.ong.br"
		},
		"MySqlitabi_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tagdata"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Data-warehouse-tag')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataStudentTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "WITH CTE AS (\n    SELECT *,\n           ROW_NUMBER() OVER (PARTITION BY HASH ORDER BY ClasssYear DESC) AS RowNum\n    FROM Accumulated_Data\n)\nSELECT HASH,ID  ,StudentName , StudentStreet , StudentBolsaFamilia , StudentGender , StudentColor , StudentDeficiency , StudentBirthday , StudentNeighborhood ,\nStudentCep , StudentBus , StudentAddressCity , StudentMotherName, StudentFatherName , StudentLocality , SchoolId , LogDate \nFROM CTE\nLEFT JOIN F_Student sf\nON CTE.HASH = sf.F_HASH\nWHERE CTE.RowNum = 1 AND sf.F_HASH IS NULL;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HASH",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "F_HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "ID",
											"type": "int",
											"physicalType": "int",
											"precision": 10
										},
										"sink": {
											"name": "Student_ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "StudentName",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentStreet",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Street_address",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentBolsaFamilia",
											"type": "bit",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Bolsa_familia_participator",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "StudentGender",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Gender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentColor",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Ethnicity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentDeficiency",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Deficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentBirthday",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Birthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentNeighborhood",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Neighborhood_address",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentCep",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CEP",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentAddressCity",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "City_address",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentMotherName",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Mother_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentFatherName",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Father_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentLocality",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Residence_zone",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "SchoolId",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "School_id_fk",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "LogDate",
											"type": "datetime",
											"physicalType": "datetime",
											"scale": 3,
											"precision": 23
										},
										"sink": {
											"name": "Log_lineage",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DB_studentTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataSchoolTable",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataStudentTable",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "WITH CTE AS (\n    SELECT *,\n           ROW_NUMBER() OVER (PARTITION BY SchoolName ORDER BY (SELECT NULL)) AS RowNum\n    FROM Accumulated_Data\n)\nSELECT SchoolId, SchoolName ,SchoolAddress ,SchoolNumber , SchoolCep , SchoolComplementAddress , SchoolComplementNeigborhood  ,SchoolLatitude , SchoolLongitude  \nFROM CTE\nLEFT JOIN D_School dc on CTE.SchoolId = dc.ID  \nWHERE RowNum = 1 AND dc.ID IS NULL ;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SchoolId",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ID",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "SchoolName",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "SchoolAddress",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "SchoolNumber",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Number_address",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "SchoolCep",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CEP",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "SchoolComplementAddress",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address_complement",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address_neighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "SchoolLatitude",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Latitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "SchoolLongitude",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Longitude",
											"type": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DB_school",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataClassroomTable",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataSchoolTable",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  SELECT ad.HASH, ad.Class, ad.StudentStage, ad.StudentSerie, ad.ClasssYear, ad.StudentStatus\n  FROM Accumulated_Data ad\n  EXCEPT\n  SELECT dc.F_HASH, dc.Name, dc.Stage, dc.Serie, dc.Class_year, dc.Status\n  FROM D_Classroom dc",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HASH",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "F_HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Class",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentStage",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Stage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentSerie",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Serie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "ClasssYear",
											"type": "int",
											"physicalType": "int",
											"precision": 10
										},
										"sink": {
											"name": "Class_year",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "StudentStatus",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DB_classroom",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataHealthTable",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataClassroomTable",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    ad.HASH,\n    ad.StudentHasCeliac,\n    ad.StudentHasDiabetes,\n    ad.StudentHasHypertension,\n    ad.StudentHasIronDeficiencyAnemia,\n    ad.StudentHasSickleCellAnemia,\n    ad.StudentHasLactoseIntolerance,\n    ad.StudentHasMalnutrition,\n    ad.StudentHasObesity,\n    ad.StudentDiferentHealthProblems,\n    DATEADD(HOUR, -3, SYSDATETIME()) AS LogDate\nFROM \n    Accumulated_Data ad\nJOIN \n    D_Student_health dsh ON ad.HASH = dsh.F_HASH\nWHERE \n    (ad.StudentHasCeliac IS NOT NULL\n    OR ad.StudentHasDiabetes IS NOT NULL\n    OR ad.StudentHasHypertension IS NOT NULL\n    OR ad.StudentHasIronDeficiencyAnemia IS NOT NULL\n    OR ad.StudentHasSickleCellAnemia IS NOT NULL\n    OR ad.StudentHasLactoseIntolerance IS NOT NULL\n    OR ad.StudentHasMalnutrition IS NOT NULL\n    OR ad.StudentHasObesity IS NOT NULL\n    OR (ad.StudentDiferentHealthProblems IS NOT NULL AND TRIM(ad.StudentDiferentHealthProblems) <> ''))\n    AND ad.LogDate > (\n        SELECT MAX(dsh_inner.LogDate)\n        FROM D_Student_health dsh_inner\n        WHERE dsh_inner.F_HASH = ad.HASH\n    )\nGROUP BY \n    ad.HASH,\n    ad.StudentHasCeliac,\n    ad.StudentHasDiabetes,\n    ad.StudentHasHypertension,\n    ad.StudentHasIronDeficiencyAnemia,\n    ad.StudentHasSickleCellAnemia,\n    ad.StudentHasLactoseIntolerance,\n    ad.StudentHasMalnutrition,\n    ad.StudentHasObesity,\n    ad.StudentDiferentHealthProblems;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HASH",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "F_HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentHasCeliac",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Celiac_desease",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentHasDiabetes",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Diabetes_desase",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentHasHypertension",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Hypertension_desease",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Iron_deficiency_anemia_desease",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sickle_cell_anemia_desease",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Lactose_Intolerance_desease",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentHasMalnutrition",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Malnutrition_desease",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentHasObesity",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Obesity_desease",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Other_health_problem",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "LogDate",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DB_studentHealth",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataStudentVaccine",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataHealthTable",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select ad.HASH,ad.StudentVaccine, DATEADD(HOUR, -3, SYSDATETIME()) AS LogDate  \nfrom Accumulated_Data ad\nwhere Vaccine_id is not null and\nad.LogDate > (\n        SELECT MAX(dsv.LogDate)\n        FROM D_Student_vaccine dsv \n        WHERE dsv.F_HASH = ad.HASH\n    )\ngroup by HASH, StudentVaccine;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HASH",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "F_HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "StudentVaccine",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Vaccine_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "LogDate",
											"type": "datetime",
											"physicalType": "datetime",
											"scale": 3,
											"precision": 23
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DB_vaccine",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataRegistration",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataStudentVaccine",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select ad.HASH, ad.DataLineageIngestion, ad.LogDate , ad.Database_name   \nfrom Accumulated_Data ad \nwhere ad.LogDate > (\nselect max(dr.LogDate)\nfrom D_Registration dr \nWHERE dr.F_HASH = ad.HASH\n)\ngroup by HASH, LogDate, Database_name  ,DataLineageIngestion;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HASH",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "F_HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"physicalType": "datetime",
											"scale": 3,
											"precision": 23
										},
										"sink": {
											"name": "DataIngestionTime",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "LogDate",
											"type": "datetime",
											"physicalType": "datetime",
											"scale": 3,
											"precision": 23
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "Database_name",
											"type": "varchar",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DB_registration",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-06T19:33:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Accumulated_data')]",
				"[concat(variables('factoryId'), '/datasets/DB_studentTable')]",
				"[concat(variables('factoryId'), '/datasets/DB_school')]",
				"[concat(variables('factoryId'), '/datasets/DB_classroom')]",
				"[concat(variables('factoryId'), '/datasets/DB_studentHealth')]",
				"[concat(variables('factoryId'), '/datasets/DB_vaccine')]",
				"[concat(variables('factoryId'), '/datasets/DB_registration')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline-BNDS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteFromAtt",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "delete from [data-warehouse-tag].dbo.BNDES"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "CopyBNDES",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteFromAtt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": "(select  \"GradeDeNotas\", replace('cristalia.tag.ong.br', '.tag.ong.br', '') as \"CityName\" ,si.id as 'id_fault' ,c.school_year, g.grade, gr.grade_1 \nfrom `cristalia.tag.ong.br`.student_identification si \njoin `cristalia.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `cristalia.tag.ong.br`.classroom c on se.classroom_fk = c.id \nleft join `cristalia.tag.ong.br`.grade g on si.id = g.id \nleft join `cristalia.tag.ong.br`.grade_results gr on se.id = gr.enrollment_fk \nwhere c.school_year = 2024 and (g.grade is not null or gr.grade_1 is not null)\nlimit 1)\n\nunion\n\n(select  \"Faltas\", replace('cristalia.tag.ong.br', '.tag.ong.br', '') as \"CityName\" , cf.id as 'id_fault' , c.school_year , cf.fkid , cf.justification \nfrom `cristalia.tag.ong.br`.student_identification si \njoin `cristalia.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `cristalia.tag.ong.br`.classroom c on se.classroom_fk = c.id \njoin `cristalia.tag.ong.br`.class_faults cf on se.student_fk = cf.student_fk \nwhere c.school_year = 2024 and cf.id is not null\nlimit 1)\n\nunion\n\n\n(select  \"GradeDeNotas\", replace('carmopolis.tag.ong.br', '.tag.ong.br', '') as \"CityName\" ,si.id as 'id_fault' ,c.school_year, g.grade, gr.grade_1 \nfrom `carmopolis.tag.ong.br`.student_identification si \njoin `carmopolis.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `carmopolis.tag.ong.br`.classroom c on se.classroom_fk = c.id \nleft join `carmopolis.tag.ong.br`.grade g on si.id = g.id \nleft join `carmopolis.tag.ong.br`.grade_results gr on se.id = gr.enrollment_fk \nwhere c.school_year = 2024 and (g.grade is not null or gr.grade_1 is not null)\nlimit 1)\n\nunion\n\n(select  \"Faltas\", replace('carmopolis.tag.ong.br', '.tag.ong.br', '') as \"CityName\" , cf.id as 'id_fault' , c.school_year , cf.fkid , cf.justification \nfrom `carmopolis.tag.ong.br`.student_identification si \njoin `carmopolis.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `carmopolis.tag.ong.br`.classroom c on se.classroom_fk = c.id \njoin `carmopolis.tag.ong.br`.class_faults cf on se.student_fk = cf.student_fk \nwhere c.school_year = 2024 and cf.id is not null\nlimit 1)\n\nunion\n\n\n(select  \"GradeDeNotas\", replace('humbertodecampos.tag.ong.br', '.tag.ong.br', '') as \"CityName\" ,si.id as 'id_fault' ,c.school_year, g.grade, gr.grade_1 \nfrom `humbertodecampos.tag.ong.br`.student_identification si \njoin `humbertodecampos.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `humbertodecampos.tag.ong.br`.classroom c on se.classroom_fk = c.id \nleft join `humbertodecampos.tag.ong.br`.grade g on si.id = g.id \nleft join `humbertodecampos.tag.ong.br`.grade_results gr on se.id = gr.enrollment_fk \nwhere c.school_year = 2024 and (g.grade is not null or gr.grade_1 is not null)\nlimit 1)\n\nunion\n\n(select  \"Faltas\", replace('humbertodecampos.tag.ong.br', '.tag.ong.br', '') as \"CityName\" , cf.id as 'id_fault' , c.school_year , cf.fkid , cf.justification \nfrom `humbertodecampos.tag.ong.br`.student_identification si \njoin `humbertodecampos.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `humbertodecampos.tag.ong.br`.classroom c on se.classroom_fk = c.id \njoin `humbertodecampos.tag.ong.br`.class_faults cf on se.student_fk = cf.student_fk \nwhere c.school_year = 2024 and cf.id is not null\nlimit 1)\n\nunion\n\n\n(select  \"GradeDeNotas\", replace('uirauna.tag.ong.br', '.tag.ong.br', '') as \"CityName\" ,si.id as 'id_fault' ,c.school_year, g.grade, gr.grade_1 \nfrom `uirauna.tag.ong.br`.student_identification si \njoin `uirauna.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `uirauna.tag.ong.br`.classroom c on se.classroom_fk = c.id \nleft join `uirauna.tag.ong.br`.grade g on si.id = g.id \nleft join `uirauna.tag.ong.br`.grade_results gr on se.id = gr.enrollment_fk \nwhere c.school_year = 2024 and (g.grade is not null or gr.grade_1 is not null)\nlimit 1)\n\nunion\n\n(select  \"Faltas\", replace('uirauna.tag.ong.br', '.tag.ong.br', '') as \"CityName\" , cf.id as 'id_fault' , c.school_year , cf.fkid , cf.justification \nfrom `uirauna.tag.ong.br`.student_identification si \njoin `uirauna.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `uirauna.tag.ong.br`.classroom c on se.classroom_fk = c.id \njoin `uirauna.tag.ong.br`.class_faults cf on se.student_fk = cf.student_fk \nwhere c.school_year = 2024 and cf.id is not null\nlimit 1)\n\nunion\n\n\n(select  \"GradeDeNotas\", replace('axixa.tag.ong.br', '.tag.ong.br', '') as \"CityName\" ,si.id as 'id_fault' ,c.school_year, g.grade, gr.grade_1 \nfrom `axixa.tag.ong.br`.student_identification si \njoin `axixa.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `axixa.tag.ong.br`.classroom c on se.classroom_fk = c.id \nleft join `axixa.tag.ong.br`.grade g on si.id = g.id \nleft join `axixa.tag.ong.br`.grade_results gr on se.id = gr.enrollment_fk \nwhere c.school_year = 2024 and (g.grade is not null or gr.grade_1 is not null)\nlimit 1)\n\nunion\n\n(select  \"Faltas\", replace('axixa.tag.ong.br', '.tag.ong.br', '') as \"CityName\" , cf.id as 'id_fault' , c.school_year , cf.fkid , cf.justification \nfrom `axixa.tag.ong.br`.student_identification si \njoin `axixa.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `axixa.tag.ong.br`.classroom c on se.classroom_fk = c.id \njoin `axixa.tag.ong.br`.class_faults cf on se.student_fk = cf.student_fk \nwhere c.school_year = 2024 and cf.id is not null\nlimit 1)\n\nunion\n\n\n(select  \"GradeDeNotas\", replace('rubelita.tag.ong.br', '.tag.ong.br', '') as \"CityName\" ,si.id as 'id_fault' ,c.school_year, g.grade, gr.grade_1 \nfrom `rubelita.tag.ong.br`.student_identification si \njoin `rubelita.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `rubelita.tag.ong.br`.classroom c on se.classroom_fk = c.id \nleft join `rubelita.tag.ong.br`.grade g on si.id = g.id \nleft join `rubelita.tag.ong.br`.grade_results gr on se.id = gr.enrollment_fk \nwhere c.school_year = 2024 and (g.grade is not null or gr.grade_1 is not null)\nlimit 1)\n\nunion\n\n(select  \"Faltas\", replace('rubelita.tag.ong.br', '.tag.ong.br', '') as \"CityName\" , cf.id as 'id_fault' , c.school_year , cf.fkid , cf.justification \nfrom `rubelita.tag.ong.br`.student_identification si \njoin `rubelita.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `rubelita.tag.ong.br`.classroom c on se.classroom_fk = c.id \njoin `rubelita.tag.ong.br`.class_faults cf on se.student_fk = cf.student_fk \nwhere c.school_year = 2024 and cf.id is not null\nlimit 1)\n\nunion\n\n\n(select  \"GradeDeNotas\", replace('pocodantas.tag.ong.br', '.tag.ong.br', '') as \"CityName\" ,si.id as 'id_fault' ,c.school_year, g.grade, gr.grade_1 \nfrom `pocodantas.tag.ong.br`.student_identification si \njoin `pocodantas.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `pocodantas.tag.ong.br`.classroom c on se.classroom_fk = c.id \nleft join `pocodantas.tag.ong.br`.grade g on si.id = g.id \nleft join `pocodantas.tag.ong.br`.grade_results gr on se.id = gr.enrollment_fk \nwhere c.school_year = 2024 and (g.grade is not null or gr.grade_1 is not null)\nlimit 1)\n\nunion\n\n(select  \"Faltas\", replace('pocodantas.tag.ong.br', '.tag.ong.br', '') as \"CityName\" , cf.id as 'id_fault' , c.school_year , cf.fkid , cf.justification \nfrom `pocodantas.tag.ong.br`.student_identification si \njoin `pocodantas.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `pocodantas.tag.ong.br`.classroom c on se.classroom_fk = c.id \njoin `pocodantas.tag.ong.br`.class_faults cf on se.student_fk = cf.student_fk \nwhere c.school_year = 2024 and cf.id is not null\nlimit 1)\n\nunion\n\n\n(select  \"GradeDeNotas\", replace('nossasenhoradagloria.tag.ong.br', '.tag.ong.br', '') as \"CityName\" ,si.id as 'id_fault' ,c.school_year, g.grade, gr.grade_1 \nfrom `nossasenhoradagloria.tag.ong.br`.student_identification si \njoin `nossasenhoradagloria.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `nossasenhoradagloria.tag.ong.br`.classroom c on se.classroom_fk = c.id \nleft join `nossasenhoradagloria.tag.ong.br`.grade g on si.id = g.id \nleft join `nossasenhoradagloria.tag.ong.br`.grade_results gr on se.id = gr.enrollment_fk \nwhere c.school_year = 2024 and (g.grade is not null or gr.grade_1 is not null)\nlimit 1)\n\nunion\n\n(select  \"Faltas\", replace('nossasenhoradagloria.tag.ong.br', '.tag.ong.br', '') as \"CityName\" , cf.id as 'id_fault' , c.school_year , cf.fkid , cf.justification \nfrom `nossasenhoradagloria.tag.ong.br`.student_identification si \njoin `nossasenhoradagloria.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `nossasenhoradagloria.tag.ong.br`.classroom c on se.classroom_fk = c.id \njoin `nossasenhoradagloria.tag.ong.br`.class_faults cf on se.student_fk = cf.student_fk \nwhere c.school_year = 2024 and cf.id is not null\nlimit 1)\n\nunion\n\n\n(select  \"GradeDeNotas\", replace('feiranova.tag.ong.br', '.tag.ong.br', '') as \"CityName\" ,si.id as 'id_fault' ,c.school_year, g.grade, gr.grade_1 \nfrom `feiranova.tag.ong.br`.student_identification si \njoin `feiranova.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `feiranova.tag.ong.br`.classroom c on se.classroom_fk = c.id \nleft join `feiranova.tag.ong.br`.grade g on si.id = g.id \nleft join `feiranova.tag.ong.br`.grade_results gr on se.id = gr.enrollment_fk \nwhere c.school_year = 2024 and (g.grade is not null or gr.grade_1 is not null)\nlimit 1)\n\nunion\n\n(select  \"Faltas\", replace('feiranova.tag.ong.br', '.tag.ong.br', '') as \"CityName\" , cf.id as 'id_fault' , c.school_year , cf.fkid , cf.justification \nfrom `feiranova.tag.ong.br`.student_identification si \njoin `feiranova.tag.ong.br`.student_enrollment se on si.id = se.student_fk \njoin `feiranova.tag.ong.br`.classroom c on se.classroom_fk = c.id \njoin `feiranova.tag.ong.br`.class_faults cf on se.student_fk = cf.student_fk \nwhere c.school_year = 2024 and cf.id is not null\nlimit 1)"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GradeDeNotas"
										},
										"sink": {
											"name": "Utilizam",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "CityName"
										},
										"sink": {
											"name": "Cidade",
											"type": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DBbndes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataEducaCenso",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteFromAtt_EducaCenso",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": "\nSELECT \nreplace('axixa.tag.ong.br', '.tag.ong.br', '') as cityName,\n    si.name as 'school Name', \n    MAX(CASE WHEN l.crud = 'E' THEN 'E' ELSE NULL END) AS crud\nFROM  `axixa.tag.ong.br`.school_identification si\nLEFT JOIN  `axixa.tag.ong.br`.log l ON si.inep_id = l.school_fk \nGROUP BY  si.name\nunion\n\n\nSELECT \nreplace('carmopolis.tag.ong.br', '.tag.ong.br', '') as cityName,\n    si.name as 'school Name', \n    MAX(CASE WHEN l.crud = 'E' THEN 'E' ELSE NULL END) AS crud\nFROM  `carmopolis.tag.ong.br`.school_identification si\nLEFT JOIN  `carmopolis.tag.ong.br`.log l ON si.inep_id = l.school_fk \nGROUP BY  si.name\nunion\n\n\nSELECT \nreplace('cristalia.tag.ong.br', '.tag.ong.br', '') as cityName,\n    si.name as 'school Name', \n    MAX(CASE WHEN l.crud = 'E' THEN 'E' ELSE NULL END) AS crud\nFROM  `cristalia.tag.ong.br`.school_identification si\nLEFT JOIN  `cristalia.tag.ong.br`.log l ON si.inep_id = l.school_fk \nGROUP BY  si.name\nunion\n\n\nSELECT \nreplace('feiranova.tag.ong.br', '.tag.ong.br', '') as cityName,\n    si.name as 'school Name', \n    MAX(CASE WHEN l.crud = 'E' THEN 'E' ELSE NULL END) AS crud\nFROM  `feiranova.tag.ong.br`.school_identification si\nLEFT JOIN  `feiranova.tag.ong.br`.log l ON si.inep_id = l.school_fk \nGROUP BY  si.name\nunion\n\n\nSELECT \nreplace('humbertodecampos.tag.ong.br', '.tag.ong.br', '') as cityName,\n    si.name as 'school Name', \n    MAX(CASE WHEN l.crud = 'E' THEN 'E' ELSE NULL END) AS crud\nFROM  `humbertodecampos.tag.ong.br`.school_identification si\nLEFT JOIN  `humbertodecampos.tag.ong.br`.log l ON si.inep_id = l.school_fk \nGROUP BY  si.name\nunion\n\n\nSELECT \nreplace('nossasenhoradagloria.tag.ong.br', '.tag.ong.br', '') as cityName,\n    si.name as 'school Name', \n    MAX(CASE WHEN l.crud = 'E' THEN 'E' ELSE NULL END) AS crud\nFROM  `nossasenhoradagloria.tag.ong.br`.school_identification si\nLEFT JOIN  `nossasenhoradagloria.tag.ong.br`.log l ON si.inep_id = l.school_fk \nGROUP BY  si.name\nunion\n\n\nSELECT \nreplace('pocodantas.tag.ong.br', '.tag.ong.br', '') as cityName,\n    si.name as 'school Name', \n    MAX(CASE WHEN l.crud = 'E' THEN 'E' ELSE NULL END) AS crud\nFROM  `pocodantas.tag.ong.br`.school_identification si\nLEFT JOIN  `pocodantas.tag.ong.br`.log l ON si.inep_id = l.school_fk \nGROUP BY  si.name\nunion\n\n\nSELECT \nreplace('rubelita.tag.ong.br', '.tag.ong.br', '') as cityName,\n    si.name as 'school Name', \n    MAX(CASE WHEN l.crud = 'E' THEN 'E' ELSE NULL END) AS crud\nFROM  `rubelita.tag.ong.br`.school_identification si\nLEFT JOIN  `rubelita.tag.ong.br`.log l ON si.inep_id = l.school_fk \nGROUP BY  si.name\nunion\n\n\nSELECT \nreplace('uirauna.tag.ong.br', '.tag.ong.br', '') as cityName,\n    si.name as 'school Name', \n    MAX(CASE WHEN l.crud = 'E' THEN 'E' ELSE NULL END) AS crud\nFROM  `uirauna.tag.ong.br`.school_identification si\nLEFT JOIN  `uirauna.tag.ong.br`.log l ON si.inep_id = l.school_fk \nGROUP BY  si.name\n\n"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "cityName"
										},
										"sink": {
											"name": "City_name"
										}
									},
									{
										"source": {
											"name": "school Name"
										},
										"sink": {
											"name": "School_name"
										}
									},
									{
										"source": {
											"name": "crud"
										},
										"sink": {
											"name": "Crud_utilizam"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DB_educaCenso",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DeleteFromAtt_EducaCenso",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "delete from [data-warehouse-tag].dbo.BNDES_EducaCenso"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "CopyDataEducaCenso_BndsAtt",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteFromAtt_BndsAtt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": "\nselect si.name, max(g.grade) as 'Utiliza_Notas', max(cf.student_fk) as 'Utiliza_Falta', replace('axixa.tag.ong.br', '.tag.ong.br', '') as `city_name`\nfrom `axixa.tag.ong.br`.school_identification si\nleft join `axixa.tag.ong.br`.student_enrollment se on se.school_inep_id_fk = si.inep_id\nleft join `axixa.tag.ong.br`.grade g on g.enrollment_fk = se.id\nleft join `axixa.tag.ong.br`.class_faults cf on cf.student_fk  = se.student_fk \nleft join `axixa.tag.ong.br`.classroom c on se.classroom_fk  = c.id\nwhere c.school_year = 2024\ngroup by si.name\nunion \n\n\nselect si.name, max(g.grade) as 'Utiliza_Notas', max(cf.student_fk) as 'Utiliza_Falta', replace('carmopolis.tag.ong.br', '.tag.ong.br', '') as `city_name`\nfrom `carmopolis.tag.ong.br`.school_identification si\nleft join `carmopolis.tag.ong.br`.student_enrollment se on se.school_inep_id_fk = si.inep_id\nleft join `carmopolis.tag.ong.br`.grade g on g.enrollment_fk = se.id\nleft join `carmopolis.tag.ong.br`.class_faults cf on cf.student_fk  = se.student_fk \nleft join `carmopolis.tag.ong.br`.classroom c on se.classroom_fk  = c.id\nwhere c.school_year = 2024\ngroup by si.name\nunion \n\n\nselect si.name, max(g.grade) as 'Utiliza_Notas', max(cf.student_fk) as 'Utiliza_Falta', replace('cristalia.tag.ong.br', '.tag.ong.br', '') as `city_name`\nfrom `cristalia.tag.ong.br`.school_identification si\nleft join `cristalia.tag.ong.br`.student_enrollment se on se.school_inep_id_fk = si.inep_id\nleft join `cristalia.tag.ong.br`.grade g on g.enrollment_fk = se.id\nleft join `cristalia.tag.ong.br`.class_faults cf on cf.student_fk  = se.student_fk \nleft join `cristalia.tag.ong.br`.classroom c on se.classroom_fk  = c.id\nwhere c.school_year = 2024\ngroup by si.name\nunion \n\n\nselect si.name, max(g.grade) as 'Utiliza_Notas', max(cf.student_fk) as 'Utiliza_Falta', replace('feiranova.tag.ong.br', '.tag.ong.br', '') as `city_name`\nfrom `feiranova.tag.ong.br`.school_identification si\nleft join `feiranova.tag.ong.br`.student_enrollment se on se.school_inep_id_fk = si.inep_id\nleft join `feiranova.tag.ong.br`.grade g on g.enrollment_fk = se.id\nleft join `feiranova.tag.ong.br`.class_faults cf on cf.student_fk  = se.student_fk \nleft join `feiranova.tag.ong.br`.classroom c on se.classroom_fk  = c.id\nwhere c.school_year = 2024\ngroup by si.name\nunion \n\n\nselect si.name, max(g.grade) as 'Utiliza_Notas', max(cf.student_fk) as 'Utiliza_Falta', replace('humbertodecampos.tag.ong.br', '.tag.ong.br', '') as `city_name`\nfrom `humbertodecampos.tag.ong.br`.school_identification si\nleft join `humbertodecampos.tag.ong.br`.student_enrollment se on se.school_inep_id_fk = si.inep_id\nleft join `humbertodecampos.tag.ong.br`.grade g on g.enrollment_fk = se.id\nleft join `humbertodecampos.tag.ong.br`.class_faults cf on cf.student_fk  = se.student_fk \nleft join `humbertodecampos.tag.ong.br`.classroom c on se.classroom_fk  = c.id\nwhere c.school_year = 2024\ngroup by si.name\nunion \n\n\nselect si.name, max(g.grade) as 'Utiliza_Notas', max(cf.student_fk) as 'Utiliza_Falta', replace('nossasenhoradagloria.tag.ong.br', '.tag.ong.br', '') as `city_name`\nfrom `nossasenhoradagloria.tag.ong.br`.school_identification si\nleft join `nossasenhoradagloria.tag.ong.br`.student_enrollment se on se.school_inep_id_fk = si.inep_id\nleft join `nossasenhoradagloria.tag.ong.br`.grade g on g.enrollment_fk = se.id\nleft join `nossasenhoradagloria.tag.ong.br`.class_faults cf on cf.student_fk  = se.student_fk \nleft join `nossasenhoradagloria.tag.ong.br`.classroom c on se.classroom_fk  = c.id\nwhere c.school_year = 2024\ngroup by si.name\nunion \n\n\nselect si.name, max(g.grade) as 'Utiliza_Notas', max(cf.student_fk) as 'Utiliza_Falta', replace('pocodantas.tag.ong.br', '.tag.ong.br', '') as `city_name`\nfrom `pocodantas.tag.ong.br`.school_identification si\nleft join `pocodantas.tag.ong.br`.student_enrollment se on se.school_inep_id_fk = si.inep_id\nleft join `pocodantas.tag.ong.br`.grade g on g.enrollment_fk = se.id\nleft join `pocodantas.tag.ong.br`.class_faults cf on cf.student_fk  = se.student_fk \nleft join `pocodantas.tag.ong.br`.classroom c on se.classroom_fk  = c.id\nwhere c.school_year = 2024\ngroup by si.name\nunion \n\n\nselect si.name, max(g.grade) as 'Utiliza_Notas', max(cf.student_fk) as 'Utiliza_Falta', replace('rubelita.tag.ong.br', '.tag.ong.br', '') as `city_name`\nfrom `rubelita.tag.ong.br`.school_identification si\nleft join `rubelita.tag.ong.br`.student_enrollment se on se.school_inep_id_fk = si.inep_id\nleft join `rubelita.tag.ong.br`.grade g on g.enrollment_fk = se.id\nleft join `rubelita.tag.ong.br`.class_faults cf on cf.student_fk  = se.student_fk \nleft join `rubelita.tag.ong.br`.classroom c on se.classroom_fk  = c.id\nwhere c.school_year = 2024\ngroup by si.name\nunion \n\n\nselect si.name, max(g.grade) as 'Utiliza_Notas', max(cf.student_fk) as 'Utiliza_Falta', replace('uirauna.tag.ong.br', '.tag.ong.br', '') as `city_name`\nfrom `uirauna.tag.ong.br`.school_identification si\nleft join `uirauna.tag.ong.br`.student_enrollment se on se.school_inep_id_fk = si.inep_id\nleft join `uirauna.tag.ong.br`.grade g on g.enrollment_fk = se.id\nleft join `uirauna.tag.ong.br`.class_faults cf on cf.student_fk  = se.student_fk \nleft join `uirauna.tag.ong.br`.classroom c on se.classroom_fk  = c.id\nwhere c.school_year = 2024\ngroup by si.name \n\n"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Utiliza_Notas"
										},
										"sink": {
											"name": "Utiliza_notas"
										}
									},
									{
										"source": {
											"name": "Utiliza_Falta"
										},
										"sink": {
											"name": "Utiliza_faltas"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "Cidade"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "School_name"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DB_bndsAtt",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DeleteFromAtt_BndsAtt",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "delete from [data-warehouse-tag].dbo.BNDES_City"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-19T19:54:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/datasets/DB_cluster')]",
				"[concat(variables('factoryId'), '/datasets/DBbndes')]",
				"[concat(variables('factoryId'), '/datasets/DB_educaCenso')]",
				"[concat(variables('factoryId'), '/datasets/DB_bndsAtt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline-TAG-AccumulatedData-Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataGloria",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LastInsertDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "\nSELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Nossa Senhora Da Glória' AS `city_name`,\n    'nossasenhoradagloria.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `nossasenhoradagloria.tag.ong.br`.student_identification s\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `nossasenhoradagloria.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN log l2 ON s.id = l2.reference_ids\nLEFT JOIN student_vaccine svc ON s.id = svc.student_id\nleft JOIN vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_gloria",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetLastInsertDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(LogDate) from [data-warehouse-tag].dbo.Accumulated_Data;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LastInsertDate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetLastInsertDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "LastInsertGloria",
							"value": {
								"value": "@formatDateTime(activity('GetLastInsertDate').output.firstRow[''], 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyDataAxixa",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataGloria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Axixa' AS `city_name`,\n    'axixa.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `axixa.tag.ong.br`.student_identification s\nLEFT JOIN `axixa.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `axixa.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `axixa.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `axixa.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `axixa.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `axixa.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `axixa.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `axixa.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `axixa.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `axixa.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `axixa.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN log l2 ON s.id = l2.reference_ids\nLEFT JOIN student_vaccine svc ON s.id = svc.student_id\nleft JOIN vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_axixa",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataBuzios",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LastInsertDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Búzios' AS `city_name`,\n    'buzios.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `buzios.tag.ong.br`.student_identification s\nLEFT JOIN `buzios.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `buzios.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `buzios.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `buzios.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `buzios.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `buzios.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `buzios.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `buzios.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `buzios.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `buzios.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `buzios.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `buzios.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `buzios.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `buzios.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_buzios",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataCampoDoBrito",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataBuzios",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Campo Do Brito' AS `city_name`,\n    'campodobrito.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `campodobrito.tag.ong.br`.student_identification s\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `campodobrito.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `campodobrito.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `campodobrito.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `campodobrito.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `campodobrito.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `campodobrito.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `campodobrito.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `campodobrito.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `campodobrito.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_campoDoBrito",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataCarmopolis",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataAxixa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Carmópolis' AS `city_name`,\n    'carmopolis.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `carmopolis.tag.ong.br`.student_identification s\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `carmopolis.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `carmopolis.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `carmopolis.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `carmopolis.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `carmopolis.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `carmopolis.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `carmopolis.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `carmopolis.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `carmopolis.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_carmopolis",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataCristalia",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataCampoDoBrito",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Cristália' AS `city_name`,\n    'cristalia.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `cristalia.tag.ong.br`.student_identification s\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `cristalia.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `cristalia.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `cristalia.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `cristalia.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `cristalia.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `cristalia.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `cristalia.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `cristalia.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `cristalia.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cristalia",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataBoquim",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LastInsertDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Boquim' AS `city_name`,\n    'boquim.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `boquim.tag.ong.br`.student_identification s\nLEFT JOIN `boquim.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `boquim.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `boquim.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `boquim.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `boquim.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `boquim.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `boquim.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `boquim.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `boquim.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `boquim.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `boquim.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `boquim.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `boquim.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `boquim.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_boquim",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataFeiraNova",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataCarmopolis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Feira Nova' AS `city_name`,\n    'feiranova.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `feiranova.tag.ong.br`.student_identification s\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `feiranova.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `feiranova.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `feiranova.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `feiranova.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `feiranova.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `feiranova.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `feiranova.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `feiranova.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `feiranova.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; ",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_feiraNova",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataGeneralMaynard",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataBoquim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'General Maynard' AS `city_name`,\n    'generalmaynard.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `generalmaynard.tag.ong.br`.student_identification s\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `generalmaynard.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `generalmaynard.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `generalmaynard.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `generalmaynard.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `generalmaynard.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `generalmaynard.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `generalmaynard.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `generalmaynard.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `generalmaynard.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; ",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_generalMaynard",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataGracchoCardoso",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataGeneralMaynard",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Graccho Cardoso' AS `city_name`,\n    'gracchocardoso.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `gracchocardoso.tag.ong.br`.student_identification s\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `gracchocardoso.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `gracchocardoso.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `gracchocardoso.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `gracchocardoso.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `gracchocardoso.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `gracchocardoso.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; ",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_gracchoCardoso",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataHumbertoCampos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LastInsertDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Humberto de Campos' AS `city_name`,\n    'humbertodecampos.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `humbertodecampos.tag.ong.br`.student_identification s\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `humbertodecampos.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `humbertodecampos.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `humbertodecampos.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `humbertodecampos.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `humbertodecampos.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `humbertodecampos.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; ",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_humbertoCampos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataIcatu",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataHumbertoCampos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Icatu ' AS `city_name`,\n    'icatu.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `icatu.tag.ong.br`.student_identification s\nLEFT JOIN `icatu.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `icatu.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `icatu.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `icatu.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `icatu.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `icatu.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `icatu.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `icatu.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `icatu.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `icatu.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `icatu.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `icatu.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `icatu.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `icatu.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; ",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_icatu",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataItabi",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataIcatu",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Itabi' AS `city_name`,\n    'itabi.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `itabi.tag.ong.br`.student_identification s\nLEFT JOIN `itabi.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `itabi.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `itabi.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `itabi.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `itabi.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `itabi.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `itabi.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `itabi.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `itabi.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `itabi.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `itabi.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `itabi.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `itabi.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `itabi.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_itabi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataItapemirim",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataItabi",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Itapemirim' AS `city_name`,\n    'itapemirim.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `itapemirim.tag.ong.br`.student_identification s\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `itapemirim.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `itapemirim.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `itapemirim.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `itapemirim.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `itapemirim.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `itapemirim.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `itapemirim.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `itapemirim.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `itapemirim.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; \n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_itapemirim",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataJaparatuba",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataCristalia",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Japaratuba' AS `city_name`,\n    'japaratuba.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO' \n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n   (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n   END) AS `Anemia_Falciforme`,\n    (CASE\n       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n   END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `japaratuba.tag.ong.br`.student_identification s\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `japaratuba.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `japaratuba.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `japaratuba.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `japaratuba.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `japaratuba.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `japaratuba.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `japaratuba.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `japaratuba.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `japaratuba.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id; \n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_japaratuba",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataJapoata",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataGracchoCardoso",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Japoatã' AS `city_name`,\n    'japoata.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `japoata.tag.ong.br`.student_identification s\nLEFT JOIN `japoata.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `japoata.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `japoata.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `japoata.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `japoata.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `japoata.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `japoata.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `japoata.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `japoata.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `japoata.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `japoata.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `japoata.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `japoata.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `japoata.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_japoata",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataPirambu",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataItapemirim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Pirambu' AS `city_name`,\n    'pirambu.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `pirambu.tag.ong.br`.student_identification s\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `pirambu.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `pirambu.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `pirambu.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `pirambu.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `pirambu.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `pirambu.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `pirambu.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `pirambu.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `pirambu.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_pirambu",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataMalhadaDosBois",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataJaparatuba",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Malhada Dos Bois' AS `city_name`,\n    'malhada.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `malhada.tag.ong.br`.student_identification s\nLEFT JOIN `malhada.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `malhada.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `malhada.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `malhada.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `malhada.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `malhada.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `malhada.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `malhada.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `malhada.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `malhada.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `malhada.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `malhada.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `malhada.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `malhada.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_malhadaDosBois",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataPocoDantas",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataFeiraNova",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Poço Dantas' AS `city_name`,\n    'pocodantas.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n       WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n         WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `pocodantas.tag.ong.br`.student_identification s\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `pocodantas.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `pocodantas.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `pocodantas.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `pocodantas.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `pocodantas.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `pocodantas.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `pocodantas.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `pocodantas.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `pocodantas.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_pocoDantas",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataPropria",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LastInsertDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Propriá' AS `city_name`,\n    'propria.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `propria.tag.ong.br`.student_identification s\nLEFT JOIN `propria.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `propria.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `propria.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `propria.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `propria.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `propria.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `propria.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `propria.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `propria.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `propria.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `propria.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `propria.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `propria.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `propria.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_propria",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataRubelita",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataPropria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Rubelita' AS `city_name`,\n    'rubelita.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `rubelita.tag.ong.br`.student_identification s\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `rubelita.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `rubelita.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `rubelita.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `rubelita.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `rubelita.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `rubelita.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN  `rubelita.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN  `rubelita.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN  `rubelita.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_rubelita",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataSantaLuzia",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataSantanaDoSaoFrancisco",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Santa Luzia do Itanhy' AS `city_name`,\n    'santaluzia.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `santaluzia.tag.ong.br`.student_identification s\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `santaluzia.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `santaluzia.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `santaluzia.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `santaluzia.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `santaluzia.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `santaluzia.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN  `santaluzia.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN  `santaluzia.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN  `santaluzia.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_santaLuziaDoIntahy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataSantanaDoSaoFrancisco",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataSantaRosaDeLima",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Santana Do São Francisco' AS `city_name`,\n    'santanadosaofrancisco.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `santanadosaofrancisco.tag.ong.br`.student_identification s\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `santanadosaofrancisco.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `santanadosaofrancisco.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `santanadosaofrancisco.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `santanadosaofrancisco.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_santanaDoSaoFrancisco",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataSantaRosaDeLima",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataSaoJoaoDaBarra",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Santa Rosa De Lima' AS `city_name`,\n    'santarosadelima.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `santarosadelima.tag.ong.br`.student_identification s\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `santarosadelima.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `santarosadelima.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `santarosadelima.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `santarosadelima.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `santarosadelima.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `santarosadelima.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN  `santarosadelima.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN  `santarosadelima.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN  `santarosadelima.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_santaRosaDeLima",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataSaoJoaoDaBarra",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataRubelita",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'São João Da Barra' AS `city_name`,\n    'saojoaodabarra.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `saojoaodabarra.tag.ong.br`.student_identification s\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `saojoaodabarra.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `saojoaodabarra.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN  `saojoaodabarra.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN  `saojoaodabarra.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN  `saojoaodabarra.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_saoJoaoDaBarra",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataUirauna",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataSantaLuzia",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Uiraúna' AS `city_name`,\n    'uirauna.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `uirauna.tag.ong.br`.student_identification s\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `uirauna.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `uirauna.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `uirauna.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `uirauna.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `uirauna.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `uirauna.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN  `uirauna.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN  `uirauna.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN  `uirauna.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_uirauna",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataUmari",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataJapoata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Umari' AS `city_name`,\n    'umari.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n --   (CASE\n --      WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n --   END) AS `Doença_Celíaca`,\n --   (CASE\n --        WHEN sr.diabetes = 1 THEN 'Diabetes'\n --   END) AS `Diabetes`,\n --   (CASE\n --       WHEN sr.hypertension = 1 THEN 'Hipertensão'\n --   END) AS `Hipertensão`,\n --   (CASE\n --       WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n --   END) AS `Anemia_Por_Deficiência_de_Ferro`,\n --   (CASE\n --       WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n --   END) AS `Anemia_Falciforme`,\n --   (CASE\n --       WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n --   END) AS `Intolerância_à_Lactose`,\n --   (CASE\n --       WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n --   END) AS `Desnutrição`,\n  --  (CASE\n --       WHEN sr.obesity = 1 THEN 'Obesidade'\n --   END) AS `Obesidade`,\n --   sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `umari.tag.ong.br`.student_identification s\nLEFT JOIN `umari.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `umari.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `umari.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `umari.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `umari.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `umari.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `umari.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `umari.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `umari.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `umari.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\n#LEFT JOIN `umari.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN `umari.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `umari.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `umari.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_umari",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataLaranjeiras",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataPocoDantas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Laranjeiras' AS `city_name`,\n    'laranjeiras.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `laranjeiras.tag.ong.br`.student_identification s\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `laranjeiras.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `laranjeiras.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `laranjeiras.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `laranjeiras.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `laranjeiras.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `laranjeiras.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `laranjeiras.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `laranjeiras.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `laranjeiras.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataDivinaPastora",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataMalhadaDosBois",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Divina Pastora' AS `city_name`,\n    'divinapastora.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `divinapastora.tag.ong.br`.student_identification s\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `divinapastora.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `divinapastora.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `divinapastora.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `divinapastora.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `divinapastora.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `divinapastora.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `divinapastora.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `divinapastora.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `divinapastora.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataCaicaraDoNorte",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataUmari",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Caiçara Do Norte' AS `city_name`,\n    'caicaradonorte.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `caicaradonorte.tag.ong.br`.student_identification s\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `caicaradonorte.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `caicaradonorte.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `caicaradonorte.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `caicaradonorte.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `caicaradonorte.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `caicaradonorte.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;\n\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataRosarioDoCatete",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataPirambu",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Rosário Do Catete' AS `city_name`,\n    'rosariodocatete.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `rosariodocatete.tag.ong.br`.student_identification s\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `rosariodocatete.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `rosariodocatete.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `rosariodocatete.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `rosariodocatete.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `rosariodocatete.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `rosariodocatete.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataSiriri",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataLaranjeiras",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Siriri' AS `city_name`,\n    'siriri.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `siriri.tag.ong.br`.student_identification s\nLEFT JOIN `siriri.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `siriri.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `siriri.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `siriri.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `siriri.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `siriri.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `siriri.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `siriri.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `siriri.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `siriri.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `siriri.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `siriri.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `siriri.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `siriri.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataMantenopolis",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataDivinaPastora",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Mantenópolis' AS `city_name`,\n    'mantenopolis.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `mantenopolis.tag.ong.br`.student_identification s\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `mantenopolis.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `mantenopolis.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `mantenopolis.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `mantenopolis.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `mantenopolis.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `mantenopolis.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `mantenopolis.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `mantenopolis.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `mantenopolis.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataUbatuba",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataCaicaraDoNorte",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Ubatuba' AS `city_name`,\n    'ubatuba.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `ubatuba.tag.ong.br`.student_identification s\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `ubatuba.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `ubatuba.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `ubatuba.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `ubatuba.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `ubatuba.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `ubatuba.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `ubatuba.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `ubatuba.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `ubatuba.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyDataAltoDoRodrigues",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataRosarioDoCatete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"additionalColumns": [
									{
										"name": "DataLineageIngestion",
										"value": {
											"value": "@formatDateTime(addHours(utcNow(),-3),'yyyy-MM-dd-HH:mm tt')",
											"type": "Expression"
										}
									}
								],
								"query": {
									"value": "SELECT\n    CONCAT(s.id, '-', sci.inep_id) AS 'Special-id',\n    MAX(l2.date) AS max_date,\n    'Alto Do Rodrigues' AS `city_name`,\n    'altodorodrigues.tag.ong.br' as 'db_name',\n    c.name AS `Turmas`,\n    s.id AS `id`,\n    s.name AS `name`,\n    sci.name AS `school name`,\n    sd.neighborhood AS `Bairro`,\n    (CASE\n        WHEN se.status = '1' THEN 'ATIVO'\n        WHEN se.status = '2' THEN 'TRANSFERIDO'\n        WHEN se.status = '3' THEN 'CANCELADO'\n        WHEN se.status = '4' THEN 'ABANDONADO'\n        WHEN se.status = '5' THEN 'RESTAURADO'\n        WHEN se.status = '6' THEN 'APROVADO'\n        WHEN se.status = '7' THEN 'APROVADO_PELO_CONSELHO'\n        WHEN se.status = '8' THEN 'REPROVADO'\n        WHEN se.status = '9' THEN 'CONCLUÍDO'\n        WHEN se.status = '10' THEN 'INDETERMINADO'\n        WHEN se.status = '11' THEN 'FALECIMENTO'\n        ELSE NULL\n    END) AS `status`,\n    sd.address AS `Rua`,\n    IF(s.bf_participator = 1, 'Sim', 'Não') AS `Bolsa_familia_char`,\n    s.bf_participator AS `Bolsa_Familia`,\n    (CASE\n        WHEN svm.stage = '1' THEN 'EDUCAÇÃO INFANTIL'\n        WHEN svm.stage = '2' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '3' THEN 'ENSINO FUNDAMENTAL'\n        WHEN svm.stage = '4' THEN 'ENSINO MÉDIO'\n        WHEN svm.stage = '5' THEN 'EDUCAÇÃO PROFISSIONAL'\n        WHEN svm.stage = '6' THEN 'EDUCAÇÃO DE JOVENS E ADULTOS'\n        WHEN svm.stage = '7' THEN\n            (CASE\n                WHEN svm.id = '56' THEN 'MULTIETAPA'\n                ELSE 'ENSINO FUNDAMENTAL'\n            END)\n    END) AS `stage`,\n    CONCAT(\n        (CASE\n            WHEN svm.id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN 'NA '\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN 'NO '\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id = 1 THEN 'CRECHE'\n            WHEN svm.id = 2 THEN 'PRÉ-ESCOLA'\n            WHEN svm.id = 3 THEN 'EDUCAÇÃO INFANTIL'\n            WHEN svm.id IN (4, 14, 25, 30, 35) THEN '1'\n            WHEN svm.id IN (5, 15, 26, 31, 36) THEN '2'\n            WHEN svm.id IN (6, 16, 27, 32, 37) THEN '3'\n            WHEN svm.id IN (7, 17, 28, 33, 38) THEN '4'\n            WHEN svm.id IN (8, 18) THEN '5'\n            WHEN svm.id IN (9, 19) THEN '6'\n            WHEN svm.id IN (10, 20) THEN '7'\n            WHEN svm.id IN (11, 21) THEN '8'\n            WHEN svm.id = 41 THEN '9'\n            ELSE ''\n        END),\n        (CASE\n            WHEN svm.id IN (1, 2, 3) THEN ''\n            WHEN svm.id IN (4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38) THEN '* SÉRIE'\n            WHEN svm.id IN (14, 15, 16, 17, 18, 19, 20, 21, 41) THEN '* ANO'\n            ELSE 'NA ____________________'\n        END)\n    ) AS `class`,\n    IF(s.sex = 1, 'Masculino', 'Feminino') AS `gender`,\n    (CASE\n        WHEN s.color_race = '1' THEN 'Branca'\n        WHEN s.color_race = '2' THEN 'Preta'\n        WHEN s.color_race = '3' THEN 'Parda'\n        WHEN s.color_race = '4' THEN 'Amarela'\n        WHEN s.color_race = '5' THEN 'Indígena'\n        ELSE 'Não Declarada'\n    END) AS `color`,\n    (CASE\n        WHEN s.deficiency = 0 THEN 'Não'\n        ELSE CONCAT_WS(': ',\n            'Possui',\n            CONCAT_WS(', ',\n                (CASE WHEN s.deficiency_type_blindness = 1 THEN 'Cegueira' END),\n                (CASE WHEN s.deficiency_type_low_vision = 1 THEN 'Baixa visão' END),\n                (CASE WHEN s.deficiency_type_deafness = 1 THEN 'Surdez' END),\n                (CASE WHEN s.deficiency_type_disability_hearing = 1 THEN 'Deficiência Auditiva' END),\n                (CASE WHEN s.deficiency_type_deafblindness = 1 THEN 'Surdocegueira' END),\n                (CASE WHEN s.deficiency_type_phisical_disability = 1 THEN 'Deficiência Física' END),\n                (CASE WHEN s.deficiency_type_intelectual_disability = 1 THEN 'Deficiência Intelectual' END),\n                (CASE WHEN s.deficiency_type_multiple_disabilities = 1 THEN 'Deficiência Múltipla' END),\n                (CASE WHEN s.deficiency_type_autism = 1 THEN 'Autismo Infantil' END),\n                (CASE WHEN s.deficiency_type_aspenger_syndrome = 1 THEN 'Síndrome de Asperger' END),\n                (CASE WHEN s.deficiency_type_rett_syndrome = 1 THEN 'Síndrome de Rett' END),\n                (CASE WHEN s.deficiency_type_childhood_disintegrative_disorder = 1 THEN 'Transtorno Desintegrativo da Infância' END),\n                (CASE WHEN s.deficiency_type_gifted = 1 THEN 'Altas habilidades / Superdotação' END)\n            )\n        )\n    END) AS `deficiency`,\n    ec.name AS `birth_city`,\n    s.birthday AS `birthday`,\n    eca.name AS `adddress_city`,\n    sd.cep AS `cep`,\n    (CASE\n        WHEN se.vehicle_type_bus = 0 THEN 'Não'\n        WHEN se.vehicle_type_bus = 1 THEN 'Sim'\n    END) AS `Utiliza Onibus`,\n    s.filiation_1 AS `mother`,\n    s.filiation_2 AS `father`,\n    c.school_year AS `school_year`,\n    (CASE\n        WHEN sd.residence_zone = '1' THEN 'Urbano'\n        WHEN sd.residence_zone = '2' THEN 'Rural'\n    END) AS `Localidade`,\n    (CASE\n        WHEN sr.celiac = 1 THEN 'Doença Celíaca'\n    END) AS `Doença_Celíaca`,\n    (CASE\n        WHEN sr.diabetes = 1 THEN 'Diabetes'\n    END) AS `Diabetes`,\n    (CASE\n        WHEN sr.hypertension = 1 THEN 'Hipertensão'\n    END) AS `Hipertensão`,\n    (CASE\n        WHEN sr.iron_deficiency_anemia = 1 THEN 'Anemia por Deficiência de Ferro'\n    END) AS `Anemia_Por_Deficiência_de_Ferro`,\n    (CASE\n        WHEN sr.sickle_cell_anemia = 1 THEN 'Anemia Falciforme'\n    END) AS `Anemia_Falciforme`,\n    (CASE\n        WHEN sr.lactose_intolerance = 1 THEN 'Intolerância à Lactose'\n    END) AS `Intolerância_à_Lactose`,\n    (CASE\n        WHEN sr.malnutrition = 1 THEN 'Desnutrição'\n    END) AS `Desnutrição`,\n    (CASE\n        WHEN sr.obesity = 1 THEN 'Obesidade'\n    END) AS `Obesidade`,\n    sr.others AS `others`,\n    vcn.name AS 'vaccine_name',\n    sci.latitude,\n    sci.longitude,\n    sci.address AS 'school_address',\n    sci.address_number AS 'school_number',\n    sci.address_complement AS 'school_complement',\n    sci.address_neighborhood AS 'school_neighborhood',\n    sci.cep AS 'school_cep',\n    sci.inep_id AS 'schoolId',\n    svc.vaccine_id as 'vaccine_id'\nFROM\n    `altodorodrigues.tag.ong.br`.student_identification s\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_city ec ON s.edcenso_city_fk = ec.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_nation en ON s.edcenso_nation_fk = en.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.student_documents_and_address sd ON s.id = sd.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_city eca ON sd.edcenso_city_fk = eca.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_uf eun ON sd.notary_office_uf_fk = eun.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_city ecn ON sd.notary_office_city_fk = ecn.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.student_enrollment se ON s.id = se.student_fk\nLEFT JOIN `altodorodrigues.tag.ong.br`.classroom c ON se.classroom_fk = c.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.edcenso_stage_vs_modality svm ON c.edcenso_stage_vs_modality_fk = svm.id\nLEFT JOIN `altodorodrigues.tag.ong.br`.school_identification sci ON s.school_inep_id_fk = sci.inep_id\nLEFT JOIN `altodorodrigues.tag.ong.br`.student_restrictions sr ON s.id = sr.id\nJOIN \t  `altodorodrigues.tag.ong.br`.log l2 ON s.id = l2.reference_ids\nLEFT JOIN `altodorodrigues.tag.ong.br`.student_vaccine svc ON s.id = svc.student_id\nleft JOIN `altodorodrigues.tag.ong.br`.vaccine vcn ON svc.vaccine_id = vcn.id\nGROUP BY\n    s.id,\n    l2.crud,\n\tc.name,\n    c.school_year,\n    vcn.name\nHAVING max_date > '@{variables('LastInsertGloria')}'\norder by s.id;",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Special-id"
										},
										"sink": {
											"name": "HASH",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "max_date"
										},
										"sink": {
											"name": "LogDate",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "db_name"
										},
										"sink": {
											"name": "Database_name",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "city_name"
										},
										"sink": {
											"name": "CityName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "id"
										},
										"sink": {
											"name": "ID",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Turmas"
										},
										"sink": {
											"name": "Class",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "name"
										},
										"sink": {
											"name": "StudentName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school name"
										},
										"sink": {
											"name": "SchoolName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bairro"
										},
										"sink": {
											"name": "StudentNeighborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "StudentStatus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Rua"
										},
										"sink": {
											"name": "StudentStreet",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_familia_char"
										},
										"sink": {
											"name": "StudentBolsaFamiliaChar",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Bolsa_Familia"
										},
										"sink": {
											"name": "StudentBolsaFamilia",
											"type": "bit"
										}
									},
									{
										"source": {
											"name": "stage"
										},
										"sink": {
											"name": "StudentStage",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "gender"
										},
										"sink": {
											"name": "StudentGender",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "color"
										},
										"sink": {
											"name": "StudentColor",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "class"
										},
										"sink": {
											"name": "StudentSerie",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "deficiency"
										},
										"sink": {
											"name": "StudentDeficiency",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birth_city"
										},
										"sink": {
											"name": "StudentBirthCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "birthday"
										},
										"sink": {
											"name": "StudentBirthday",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "adddress_city"
										},
										"sink": {
											"name": "StudentAddressCity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "cep"
										},
										"sink": {
											"name": "StudentCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Utiliza Onibus"
										},
										"sink": {
											"name": "StudentBus",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "mother"
										},
										"sink": {
											"name": "StudentMotherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "father"
										},
										"sink": {
											"name": "StudentFatherName",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_year"
										},
										"sink": {
											"name": "ClasssYear",
											"type": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Localidade"
										},
										"sink": {
											"name": "StudentLocality",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Doença_Celíaca"
										},
										"sink": {
											"name": "StudentHasCeliac",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes"
										},
										"sink": {
											"name": "StudentHasDiabetes",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Hipertensão"
										},
										"sink": {
											"name": "StudentHasHypertension",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Por_Deficiência_de_Ferro"
										},
										"sink": {
											"name": "StudentHasIronDeficiencyAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Anemia_Falciforme"
										},
										"sink": {
											"name": "StudentHasSickleCellAnemia",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Intolerância_à_Lactose"
										},
										"sink": {
											"name": "StudentHasLactoseIntolerance",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Desnutrição"
										},
										"sink": {
											"name": "StudentHasMalnutrition",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "Obesidade"
										},
										"sink": {
											"name": "StudentHasObesity",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "others"
										},
										"sink": {
											"name": "StudentDiferentHealthProblems",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "vaccine_name"
										},
										"sink": {
											"name": "StudentVaccine",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "latitude"
										},
										"sink": {
											"name": "SchoolLatitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "longitude"
										},
										"sink": {
											"name": "SchoolLongitude",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_address"
										},
										"sink": {
											"name": "SchoolAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_number"
										},
										"sink": {
											"name": "SchoolNumber",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_complement"
										},
										"sink": {
											"name": "SchoolComplementAddress",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_neighborhood"
										},
										"sink": {
											"name": "SchoolComplementNeigborhood",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "school_cep"
										},
										"sink": {
											"name": "SchoolCep",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "schoolId"
										},
										"sink": {
											"name": "SchoolId",
											"type": "varchar"
										}
									},
									{
										"source": {
											"name": "DataLineageIngestion"
										},
										"sink": {
											"name": "DataLineageIngestion",
											"type": "datetime",
											"scale": 3,
											"precision": 23
										}
									},
									{
										"source": {
											"name": "vaccine_id"
										},
										"sink": {
											"name": "Vaccine_id",
											"type": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DB_cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Accumulated_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"LastInsertGloria": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-25T00:36:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DB_gloria')]",
				"[concat(variables('factoryId'), '/datasets/Accumulated_data')]",
				"[concat(variables('factoryId'), '/datasets/DB_axixa')]",
				"[concat(variables('factoryId'), '/datasets/DB_buzios')]",
				"[concat(variables('factoryId'), '/datasets/DB_campoDoBrito')]",
				"[concat(variables('factoryId'), '/datasets/DB_carmopolis')]",
				"[concat(variables('factoryId'), '/datasets/DB_cristalia')]",
				"[concat(variables('factoryId'), '/datasets/DB_boquim')]",
				"[concat(variables('factoryId'), '/datasets/DB_feiraNova')]",
				"[concat(variables('factoryId'), '/datasets/DB_generalMaynard')]",
				"[concat(variables('factoryId'), '/datasets/DB_gracchoCardoso')]",
				"[concat(variables('factoryId'), '/datasets/DB_humbertoCampos')]",
				"[concat(variables('factoryId'), '/datasets/DB_icatu')]",
				"[concat(variables('factoryId'), '/datasets/DB_itabi')]",
				"[concat(variables('factoryId'), '/datasets/DB_itapemirim')]",
				"[concat(variables('factoryId'), '/datasets/DB_japaratuba')]",
				"[concat(variables('factoryId'), '/datasets/DB_japoata')]",
				"[concat(variables('factoryId'), '/datasets/DB_pirambu')]",
				"[concat(variables('factoryId'), '/datasets/DB_malhadaDosBois')]",
				"[concat(variables('factoryId'), '/datasets/DB_pocoDantas')]",
				"[concat(variables('factoryId'), '/datasets/DB_propria')]",
				"[concat(variables('factoryId'), '/datasets/DB_rubelita')]",
				"[concat(variables('factoryId'), '/datasets/DB_santaLuziaDoIntahy')]",
				"[concat(variables('factoryId'), '/datasets/DB_santanaDoSaoFrancisco')]",
				"[concat(variables('factoryId'), '/datasets/DB_santaRosaDeLima')]",
				"[concat(variables('factoryId'), '/datasets/DB_saoJoaoDaBarra')]",
				"[concat(variables('factoryId'), '/datasets/DB_uirauna')]",
				"[concat(variables('factoryId'), '/datasets/DB_umari')]",
				"[concat(variables('factoryId'), '/datasets/DB_cluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline-refresh-PowerBi-accumulatedData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Refresh_accumulatedData",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SetAccessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "Bearer @{variables('accessToken')}",
									"type": "Expression"
								},
								"Content-Type": {
									"value": "application/json",
									"type": "Expression"
								}
							},
							"url": "https://api.powerbi.com/v1.0/myorg/datasets/21fa7616-c26e-41d6-a86e-f5efbc17101a/refreshes",
							"body": {
								"Refresh for api ADF": "ADF Refresh"
							}
						}
					},
					{
						"name": "GetAccessToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://login.windows.net/common/oauth2/token",
							"body": {
								"value": "@concat('grant_type=password&client_id=', variables('client_id'), '&resource=https://analysis.windows.net/powerbi/api&scope=openid&username=', variables('NewUsername'), '&password=', variables('password'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetAccessToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetAccessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "accessToken",
							"value": {
								"value": "@activity('GetAccessToken').output.access_token",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Refresh_TagReport",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SetAccessToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "Bearer @{variables('accessToken')}",
									"type": "Expression"
								},
								"Content-Type": {
									"value": "application/json",
									"type": "Expression"
								}
							},
							"url": "https://api.powerbi.com/v1.0/myorg/datasets/58710fc3-8f85-4d5d-9876-2a36a04b0ab5/refreshes",
							"body": {
								"Refresh for api ADF": "ADF Refresh"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"accessToken": {
						"type": "String"
					},
					"username": {
						"type": "String",
						"defaultValue": "ti.pauloh@thp.org.br"
					},
					"password": {
						"type": "String",
						"defaultValue": "81260235Ph."
					},
					"client_id": {
						"type": "String",
						"defaultValue": "fdc41ef1-199b-475a-adfd-408fb1a53937"
					},
					"NewUsername": {
						"type": "String",
						"defaultValue": "ti.pauloh@thp.org.br"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-07-03T23:03:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Accumulated_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HASH",
						"type": "varchar"
					},
					{
						"name": "LogDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Database_name",
						"type": "varchar"
					},
					{
						"name": "CityName",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Class",
						"type": "varchar"
					},
					{
						"name": "StudentName",
						"type": "varchar"
					},
					{
						"name": "SchoolName",
						"type": "varchar"
					},
					{
						"name": "StudentNeighborhood",
						"type": "varchar"
					},
					{
						"name": "StudentStatus",
						"type": "varchar"
					},
					{
						"name": "StudentAddress",
						"type": "varchar"
					},
					{
						"name": "StudentBolsaFamiliaChar",
						"type": "varchar"
					},
					{
						"name": "StudentBolsaFamilia",
						"type": "bit"
					},
					{
						"name": "StudentStage",
						"type": "varchar"
					},
					{
						"name": "StudentGender",
						"type": "varchar"
					},
					{
						"name": "StudentColor",
						"type": "varchar"
					},
					{
						"name": "StudentDeficiency",
						"type": "varchar"
					},
					{
						"name": "StudentBirthCity",
						"type": "varchar"
					},
					{
						"name": "StudentBirthday",
						"type": "varchar"
					},
					{
						"name": "StudentStreet",
						"type": "varchar"
					},
					{
						"name": "StudentAddressCity",
						"type": "varchar"
					},
					{
						"name": "StudentCep",
						"type": "varchar"
					},
					{
						"name": "StudentBus",
						"type": "varchar"
					},
					{
						"name": "StudentMotherName",
						"type": "varchar"
					},
					{
						"name": "StudentFatherName",
						"type": "varchar"
					},
					{
						"name": "ClasssYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StudentLocality",
						"type": "varchar"
					},
					{
						"name": "StudentHasCeliac",
						"type": "varchar"
					},
					{
						"name": "StudentHasDiabetes",
						"type": "varchar"
					},
					{
						"name": "StudentHasHypertension",
						"type": "varchar"
					},
					{
						"name": "StudentHasIronDeficiencyAnemia",
						"type": "varchar"
					},
					{
						"name": "StudentHasSickleCellAnemia",
						"type": "varchar"
					},
					{
						"name": "StudentHasLactoseIntolerance",
						"type": "varchar"
					},
					{
						"name": "StudentHasMalnutrition",
						"type": "varchar"
					},
					{
						"name": "StudentHasObesity",
						"type": "varchar"
					},
					{
						"name": "StudentDiferentHealthProblems",
						"type": "varchar"
					},
					{
						"name": "StudentVaccine",
						"type": "varchar"
					},
					{
						"name": "SchoolLatitude",
						"type": "varchar"
					},
					{
						"name": "SchoolLongitude",
						"type": "varchar"
					},
					{
						"name": "SchoolAddress",
						"type": "varchar"
					},
					{
						"name": "SchoolNumber",
						"type": "varchar"
					},
					{
						"name": "SchoolComplementAddress",
						"type": "varchar"
					},
					{
						"name": "SchoolComplementNeigborhood",
						"type": "varchar"
					},
					{
						"name": "SchoolCep",
						"type": "varchar"
					},
					{
						"name": "SchoolId",
						"type": "varchar"
					},
					{
						"name": "DataLineageIngestion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "StudentSerie",
						"type": "varchar"
					},
					{
						"name": "School_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Vaccine_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Accumulated_Data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_axixa')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlAxixa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlAxixa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_bndsAtt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "BNDES_City"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_boquim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlBoquim",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlBoquim')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_buzios')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlBuzios",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlBuzios')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_campoDoBrito')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlCampoDoBrito",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlCampoDoBrito')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_carmopolis')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlCarmopolis",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlCarmopolis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_classroom')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "F_HASH",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Stage",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "Serie",
						"type": "varchar"
					},
					{
						"name": "Class_year",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "D_Classroom"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_cluster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Banco_cluster_TIA",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Banco_cluster_TIA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_cristalia')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlCristalia",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlCristalia')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_educaCenso')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "City_name",
						"type": "varchar"
					},
					{
						"name": "School_name",
						"type": "varchar"
					},
					{
						"name": "Crud_utilizam",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BNDES_EducaCenso"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_feiraNova')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlFeiraNova",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlFeiraNova')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_generalMaynard')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlGeneralMaynard",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlGeneralMaynard')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_gloria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlGloria",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlGloria')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_gracchoCardoso')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlGrachoCardoso",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlGrachoCardoso')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_humbertoCampos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlHumbertoCampos",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlHumbertoCampos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_icatu')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlIcatu",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlIcatu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_itabi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlitabi",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlitabi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_itapemirim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlItapemirim",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlItapemirim')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_japaratuba')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlJaparatuba",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlJaparatuba')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_japoata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlJapoata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlJapoata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_malhadaDosBois')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlMalhadaDosBois",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlMalhadaDosBois')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_pirambu')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlPirambu",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlPirambu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_pocoDantas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlPocoDantas",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlPocoDantas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_propria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlPropria",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlPropria')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_registration')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "F_HASH",
						"type": "varchar"
					},
					{
						"name": "DataIngestionTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LogDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Database_name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "D_Registration"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_rubelita')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlRubelita",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlRubelita')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_santaLuziaDoIntahy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlSantaLuzia",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlSantaLuzia')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_santaRosaDeLima')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlSantaRosaDeLima",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlSantaRosaDeLima')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_santanaDoSaoFrancisco')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlSantanaDoSaoFrancisco",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlSantanaDoSaoFrancisco')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_saoJoaoDaBarra')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlSaoJoaoDaBarra",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlSaoJoaoDaBarra')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_school')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "Latitude",
						"type": "varchar"
					},
					{
						"name": "Longitude",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Address",
						"type": "varchar"
					},
					{
						"name": "Number_address",
						"type": "varchar"
					},
					{
						"name": "CEP",
						"type": "varchar"
					},
					{
						"name": "Address_complement",
						"type": "varchar"
					},
					{
						"name": "Address_neighborhood",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "D_School"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_studentHealth')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "F_HASH",
						"type": "varchar"
					},
					{
						"name": "Celiac_desease",
						"type": "varchar"
					},
					{
						"name": "Diabetes_desase",
						"type": "varchar"
					},
					{
						"name": "Iron_deficiency_anemia_desease",
						"type": "varchar"
					},
					{
						"name": "Sickle_cell_anemia_desease",
						"type": "varchar"
					},
					{
						"name": "Lactose_Intolerance_desease",
						"type": "varchar"
					},
					{
						"name": "Malnutrition_desease",
						"type": "varchar"
					},
					{
						"name": "Hypertension_desease",
						"type": "varchar"
					},
					{
						"name": "Obesity_desease",
						"type": "varchar"
					},
					{
						"name": "Other_health_problem",
						"type": "varchar"
					},
					{
						"name": "LogDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "D_Student_health"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_studentTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "F_HASH",
						"type": "varchar"
					},
					{
						"name": "Student_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Street_address",
						"type": "varchar"
					},
					{
						"name": "Bolsa_familia_participator",
						"type": "bit"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Ethnicity",
						"type": "varchar"
					},
					{
						"name": "Birth_city",
						"type": "varchar"
					},
					{
						"name": "Deficiency",
						"type": "varchar"
					},
					{
						"name": "Birthday",
						"type": "varchar"
					},
					{
						"name": "Neighborhood_address",
						"type": "varchar"
					},
					{
						"name": "CEP",
						"type": "varchar"
					},
					{
						"name": "Public_transport",
						"type": "varchar"
					},
					{
						"name": "City_address",
						"type": "varchar"
					},
					{
						"name": "Mother_name",
						"type": "varchar"
					},
					{
						"name": "Father_name",
						"type": "varchar"
					},
					{
						"name": "Residence_zone",
						"type": "varchar"
					},
					{
						"name": "School_id_fk",
						"type": "varchar"
					},
					{
						"name": "Log_lineage",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "F_Student"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_uirauna')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlUirauna",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlUirauna')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_umari')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlUmari",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlUmari')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_vaccine')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "F_HASH",
						"type": "varchar"
					},
					{
						"name": "Vaccine_name",
						"type": "varchar"
					},
					{
						"name": "LogDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "D_Student_vaccine"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBbndes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Utilizam",
						"type": "varchar"
					},
					{
						"name": "Cidade",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BNDES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]",
					"alwaysEncryptedSettings": {
						"alwaysEncryptedAkvAuthType": "ManagedIdentity"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Banco_cluster_TIA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('Banco_cluster_TIA_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('Banco_cluster_TIA_properties_typeProperties_database')]",
					"username": "[parameters('Banco_cluster_TIA_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('Banco_cluster_TIA_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlAltoDoRodrigues')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlAltoDoRodrigues_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlAltoDoRodrigues_properties_typeProperties_database')]",
					"username": "[parameters('MySqlAltoDoRodrigues_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlAltoDoRodrigues_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlAxixa')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlAxixa_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlAxixa_properties_typeProperties_database')]",
					"username": "[parameters('MySqlAxixa_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlAxixa_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlBoquim')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlBoquim_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlBoquim_properties_typeProperties_database')]",
					"username": "[parameters('MySqlBoquim_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlBoquim_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlBuzios')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlBuzios_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlBuzios_properties_typeProperties_database')]",
					"username": "[parameters('MySqlBuzios_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlBuzios_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlCaicaraDoNorte')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlCaicaraDoNorte_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlCaicaraDoNorte_properties_typeProperties_database')]",
					"username": "[parameters('MySqlCaicaraDoNorte_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlCaicaraDoNorte_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlCampoDoBrito')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlCampoDoBrito_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlCampoDoBrito_properties_typeProperties_database')]",
					"username": "[parameters('MySqlCampoDoBrito_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlCampoDoBrito_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlCarmopolis')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlCarmopolis_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlCarmopolis_properties_typeProperties_database')]",
					"username": "[parameters('MySqlCarmopolis_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlCarmopolis_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlCristalia')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlCristalia_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlCristalia_properties_typeProperties_database')]",
					"username": "[parameters('MySqlCristalia_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlCristalia_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlFeiraNova')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlFeiraNova_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlFeiraNova_properties_typeProperties_database')]",
					"username": "[parameters('MySqlFeiraNova_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlFeiraNova_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlGeneralMaynard')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlGeneralMaynard_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlGeneralMaynard_properties_typeProperties_database')]",
					"username": "[parameters('MySqlGeneralMaynard_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlGeneralMaynard_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlGloria')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Banco de gloria",
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlGloria_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlGloria_properties_typeProperties_database')]",
					"username": "[parameters('MySqlGloria_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlGloria_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlGrachoCardoso')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlGrachoCardoso_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlGrachoCardoso_properties_typeProperties_database')]",
					"username": "[parameters('MySqlGrachoCardoso_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlGrachoCardoso_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlHumbertoCampos')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlHumbertoCampos_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlHumbertoCampos_properties_typeProperties_database')]",
					"username": "[parameters('MySqlHumbertoCampos_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlHumbertoCampos_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlIcatu')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlIcatu_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlIcatu_properties_typeProperties_database')]",
					"username": "[parameters('MySqlIcatu_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlIcatu_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlItapemirim')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlItapemirim_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlItapemirim_properties_typeProperties_database')]",
					"username": "[parameters('MySqlItapemirim_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlItapemirim_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlJaparatuba')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlJaparatuba_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlJaparatuba_properties_typeProperties_database')]",
					"username": "[parameters('MySqlJaparatuba_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlJaparatuba_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlJapoata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlJapoata_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlJapoata_properties_typeProperties_database')]",
					"username": "[parameters('MySqlJapoata_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlJapoata_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlMalhadaDosBois')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlMalhadaDosBois_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlMalhadaDosBois_properties_typeProperties_database')]",
					"username": "[parameters('MySqlMalhadaDosBois_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlMalhadaDosBois_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlPirambu')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlPirambu_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlPirambu_properties_typeProperties_database')]",
					"username": "[parameters('MySqlPirambu_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlPirambu_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlPocoDantas')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlPocoDantas_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlPocoDantas_properties_typeProperties_database')]",
					"username": "[parameters('MySqlPocoDantas_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlPocoDantas_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlPropria')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlPropria_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlPropria_properties_typeProperties_database')]",
					"username": "[parameters('MySqlPropria_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlPropria_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlRubelita')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlRubelita_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlRubelita_properties_typeProperties_database')]",
					"username": "[parameters('MySqlRubelita_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlRubelita_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlSantaLuzia')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlSantaLuzia_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlSantaLuzia_properties_typeProperties_database')]",
					"username": "[parameters('MySqlSantaLuzia_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlSantaLuzia_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlSantaRosaDeLima')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlSantaRosaDeLima_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlSantaRosaDeLima_properties_typeProperties_database')]",
					"username": "[parameters('MySqlSantaRosaDeLima_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlSantaRosaDeLima_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlSantanaDoSaoFrancisco')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlSantanaDoSaoFrancisco_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlSantanaDoSaoFrancisco_properties_typeProperties_database')]",
					"username": "[parameters('MySqlSantanaDoSaoFrancisco_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlSantanaDoSaoFrancisco_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlSaoJoaoDaBarra')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlSaoJoaoDaBarra_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlSaoJoaoDaBarra_properties_typeProperties_database')]",
					"username": "[parameters('MySqlSaoJoaoDaBarra_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlSaoJoaoDaBarra_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlUbatuba')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlUbatuba_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlUbatuba_properties_typeProperties_database')]",
					"username": "[parameters('MySqlUbatuba_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlUbatuba_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlUirauna')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlUirauna_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlUirauna_properties_typeProperties_database')]",
					"username": "[parameters('MySqlUirauna_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlUirauna_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlUmari')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlUmari_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlUmari_properties_typeProperties_database')]",
					"username": "[parameters('MySqlUmari_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlUmari_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlitabi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySqlitabi_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySqlitabi_properties_typeProperties_database')]",
					"username": "[parameters('MySqlitabi_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySqlitabi_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Powerbi_dataset_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pipeline-refresh-PowerBi-accumulatedData",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2024-08-30T00:00:00",
						"timeZone": "E. South America Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pipeline-refresh-PowerBi-accumulatedData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger-data-warehouse-tag')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Data-warehouse-tag",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2024-06-07T02:00:00",
						"timeZone": "E. South America Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Data-warehouse-tag')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_BNDES')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pipeline-BNDS",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 48,
						"startTime": "2024-08-30T00:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pipeline-BNDS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_TAG_AccumulatedData_Load')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pipeline-TAG-AccumulatedData-Load",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2024-08-27T23:59:00",
						"timeZone": "E. South America Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pipeline-TAG-AccumulatedData-Load')]"
			]
		}
	]
}